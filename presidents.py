#!/usr/bin/env python3# Exercise: Presidents# Author GitHub usernames:# #1:# #2:# Instructions:# Write a program to:# (1) Load the data from presidents.txt into a dictionary.# (2) Print the years the greatest and least number of presidents were alive.#     (between 1732 and 2016 (inclusive))#     Ex.#       'least = 2015'#       'John Doe'#       'most = 2015'#       'John Doe, Jane Doe, John Adams, and Jane Adams'# Bonus: Confirm there are no ties. If there is a tie print like so:#     Ex.#       'least = 1900, 2013-2015'#       'John Doe (1900)'#       'Jane Doe (2013-2015)'#       'most = 1900-1934, 2013'#       'John Doe, Jane Doe, John Adams, and Jane Adams (1900-1933)'#       'Sally Doe, Billy Doe, Mary Doe, and Cary Doe (1934)'#       'Alice Doe, Bob Doe, Zane Doe, and Yi Do (2013)'# (3) Write your print statements to a file (greatest_least.txt) as well.# Upload that file as well.############################################################################### Imports# Bodydef read_file(filename):    with open(filename, "r") as f:        file_contents = f.readlines()    return file_contentsdef make_presidents_dict(file_contents):    presidents_data = {}    for line in file_contents:        splits = line.strip().split(",")        if splits[2] == 'None':  # Changing None to Current Year for presidents who're still alive             splits[2] = '2016'   # For easy calculations        presidents_data[splits[0]] = (int(splits[1]), int(splits[2]))    return presidents_datadef make_year_dict(presidents_data):    min_year = 1732    current_year = 2016    year_dict = {}    # Make dict of all years with empty lists as values    for year in range(min_year, current_year + 1):        year_dict[year] = []    #     for president in presidents_data:        born, dead = presidents_data[president]        for year in range(born, dead+1):            year_dict[year].append(president)    return year_dictdef histogram(year_dict):    year_histogram = {year: len(year_dict[year]) for year in year_dict}    return year_histogramdef min_max(year_histogram, year_dict):    ordered_year_list = sorted(sorted(year_histogram), key = year_histogram.__getitem__)    least = ordered_year_list[0]    most = ordered_year_list[-1]    print("least =", least)    print(", ".join(year_dict[least]))    print("most =", most)    print(", ".join(year_dict[most]))    return least, ", ".join(year_dict[least]), most, ", ".join(year_dict[most])def write_to_file(results):    least_year, least_string, most_year, most_string = results    with open("greatest_least.txt", "w") as f:        f.write("least = "+str(least_year))        f.write("\n")        f.write(least_string)        f.write("\n")        f.write("most = "+str(most_year))        f.write("\n")        f.write(most_string)##############################################################################def main():  # CALL YOUR FUNCTION BELOW    file_contents = read_file("presidents.txt")    presidents_data = make_presidents_dict(file_contents)    year_dict = make_year_dict(presidents_data)    min_max(histogram(year_dict), year_dict)    write_to_file(min_max(histogram(year_dict), year_dict))if __name__ == '__main__':    main()